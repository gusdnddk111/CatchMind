<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Catch Mind!</title>

    <link rel="stylesheet" type="text/css" href="./stylesheets/waitingRoomStyle.css">
    <meta charset="utf-8">
    <title>Catch Mind!</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css">
    <link href='http://fonts.googleapis.com/css?family=Lato&subset=latin,latin-ext' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" type="text/css" href="./stylesheets/gameRoomStyle.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="./javascripts/gameRoomScript.js"></script>
    <script type="text/javascript" src="./javascripts/waitingRoomScript.js"></script>
    <script type="text/javascript" src="./javascripts/title.js"></script>
    <script type="text/javascript" src="./javascripts/canvas.js"></script>
    <script src="./socket.io/socket.io.js"></script>

</head>
<body>

<div class = "container">
    <div id = "left-section">
        <button class = "btn" id = "btn-start" disabled="disabled">게임시작</button>
        <div class = "users">
            <div class="user" id="user1">
                <div class="speech_bubble_left" id="bubble1"></div>

            </div>

            <div class="user" id="user3">
                <div class="speech_bubble_left" id="bubble3"></div>

            </div>
            <div class="user" id="user5">
                <div class="speech_bubble_left" id="bubble5"></div>

            </div>
            <div class="user" id="user7">
                <div class="speech_bubble_left" id="bubble7"></div>

            </div>

        </div>

    </div>

    <div id = "right-section">
        <button class = "btn" id = "btn_exit">나가기</button>

        <div class = "users">

            <div class="user" id="user2">
                <div class="speech_bubble_right" id="bubble2"></div>

            </div>
            <div class="user" id="user4">
                <div class="speech_bubble_right" id="bubble4"></div>

            </div>
            <div class="user" id="user6">
                <div class="speech_bubble_right" id="bubble6"></div>

            </div>
            <div class="user" id="user8">
                <div class="speech_bubble_right" id="bubble8"></div>

            </div>
        </div>
    </div>


    <div id = "contents">

        <div id = "title">
            <div id="word"></div>
            <img id = "Pic-titlelogo" src = "./images/title.png" alt = "캐치 마인드!">
        </div>

        <div id ="sketch-canvas">
            <img id = "Pic-sketchbook" src = "./images/sketchbook.gif" alt = "이미지를 불러올 수 없습니다.">
            <canvas id = "canvas" width = "605" height = "415"></canvas>
            <img id = "Pic-circle" src = "./images/circle.png" alt = "">
        </div>

        <div id = "tools">
            <button class = "btn" id = "btn-reset">reset</button>
            <button class = "btn" id = "btn-undo" disabled="disabled">undo</button>
            <label></label>
            <input name="brush" id="brush_size" type="range" value="5" min="1" max="100"/>


            <div id = "color-table">
                <ul id="colors">
                    <li style="background-color:black;"> </li>
                    <li style="background-color:white;"> </li>
                    <li style="background-color:red;"> </li>
                    <li style="background-color:brown;"> </li>
                    <li style="background-color:orange;"> </li>
                    <li style="background-color:yellow"> </li>
                    <li style="background-color:sandybrown"> </li>
                    <li style="background-color:midnightblue"> </li>
                    <li style="background-color:#ff00ff;"> </li>
                    <li style="background-color:#0099FF;"> </li>
                    <li style="background-color:blue"> </li>
                    <li style="background-color:darkorchid"> </li>
                    <li style="background-color:#82B82C;"> </li>
                    <li style="background-color:green;"> </li>
                    <li style="background-color:gray"> </li>
                </ul>

            </div>
        </div>

        <div id = "chatting">
            <label>chatting:  </label><input maxlength='63' id="chattingbox" type="text" />
            <input class = "btn" id = "btn-send" type="submit" value="send" />
        </div>
    </div>

</div>

</body>
<script>
    var serverURL = '52.32.58.14:3000';
    var ongame = false;
    var name = '<%= user %>';
    var room = '<%= room %>';

    $(document).ready(function() {

        var socket = io.connect(serverURL);

        //방에 입장시
        socket.emit('joinroom',{room:room,userid: name});

        //유저리스트 출력
        socket.on('userlist',function(data) {
            var users = data.users;
            console.log(users.length);
            initUser();
            startBtnInvisible();
            canvasInactive();
            toolsInvisible();
            answerInvisible();
            for (var i = 0; i < users.length; i++) {
                createUser(users[i].position, users[i].id);
            }
            for (var i = 0; i < users.length; i++) {
                if(users[i].host == true){
                    $('#user' + users[i].position + ' .userPic .Pic-anonymous').attr('src','./images/user-host.png');
                    if(users.length>1){
                        $('#btn-start').removeAttr('disabled');
                    }else{
                        $('#btn-start').attr('disabled');
                    }
                }
            }
        });

        //방장에게만 시작버튼 출력
        socket.on("host1",function (data) {
            startBtnVisible(data.len);
        });

        //서버에서 뿌린 캔버스정보 받아서 캔버스에 표시
        socket.on('toClientImg',function(data){
            var img = new Image();
            $(img).load(function () {
                var context = document.getElementById("canvas").getContext("2d");
                context.drawImage(img, 0, 0);
            });
            img.src = data.imgData;
        });

        //방 나가기
        socket.on('roomexit',function(data){
            window.location.href = '/waitingRoom';
        });

        //방 나가기 버튼 눌렀을 때
        $('#btn_exit').click(function(){

            if(ongame == false) {
                socket.emit('disconnect1', {room: room, id:name});
            }else{
                alert("게임중엔 방을 나갈 수 없습니다.");
            }
        });

        $("#chattingbox").keyup(function(event) {
            if (event.which == 13) {
                var msg = $('#chattingbox').val();
                $('#chattingbox').val("");
                send(msg);
            }
        });

        $('#btn-send').click(function() {
            var msg = $('#chattingbox').val();
            $('#chattingbox').val("");
            send(msg);
        });

        //채팅 시각화
        socket.on('toClient', function(data) {
            writeMessage(data.msg,data.position);
        });

        //정답 시각화
        socket.on('checkToClient', function(data) {
            writeAnswer(data.msg,data.position,data.check);
        });

        function send(msg){
            if(ongame==true && msg.substring(1,0)=="#"){
                socket.emit('toServerCheck', {message : msg.substring(1), room:room, id:name});
            }else{
                socket.emit('toServer', {message : msg, room:room, id:name});
            }
        }

        //각 클라이언트들에게 게임이 시작되었음을 알림
        socket.on('startToClient',function(data){
           ongame = data.state;
        });
        //각 클라이언트들에게 게임이 종료되었음을 알림
        socket.on('gameEndToClient',function(data){
            ongame = data.state;
        });

        //시작버튼을 눌렀을 때
        $('#btn-start').click(function(){
            $(this).attr('disabled', 'disabled');
            socket.emit('startToServer',{room:room});
            socket.emit('hostCheck',{room:room});
            socket.on('host2',function (data) {
                answerVisible(data.word);
                toolsVisible();
                canvasActive();
            });
        });

        //정답표시함수
        function writeAnswer(msg, pos, check) {
            var bubble_id="#bubble"+ pos;
            $(bubble_id).html("");
            if(check == false){
                $(bubble_id).css('color','red');
            }
            else{
                $(bubble_id).css('color','green');
                $('#Pic-circle').css('display','block');
                setTimeout(function(){
                    $('#Pic-circle').css('display','none');
                    canvasInit();
                }, 2000);
            }
            $(bubble_id).css('font-weight','bold');
            $(bubble_id).html(msg);
            $(bubble_id).css('display','block');
            setTimeout(function(){
                $(bubble_id).css('display','none');
            }, 3000);
        }

        //채팅표시함수
        function writeMessage(msg, pos) {
            var bubble_id="#bubble"+ pos;
            $(bubble_id).html("");
            $(bubble_id).css('color','black');
            $(bubble_id).css('font-weight','normal');
            $(bubble_id).html(msg);
            $(bubble_id).css('display','block');
            setTimeout(function(){
                $(bubble_id).css('display','none');
            }, 3000);
        }

        //유저가 방에 들어올 때 유저표시
        function createUser(position, id){
            var user = "#user"+position;

            var div1 = $('<div class = "userID">'+id+'</div>');
            var div2 = $('<div class = "userPic"></div>');
            var img1 = $('<img class = "Pic-anonymous" src="./images/user.png">');
            var label1 = $("<label></label>");

            div1 = div1.append(label1);
            div2 = div2.append(img1);
            $(user).append(div1).append(div2);
        }

        //유저리스트 초기화
        function initUser(){
            for(var i=1;i<9;i++){
                var bubbleId = "bubble" + i;
                if(i==1 || i==3 || i==5 || i==7){
                    $('#user'+i).html('<div class="speech_bubble_left" id='+bubbleId+'></div>');
                }else{
                    $('#user'+i).html('<div class="speech_bubble_right" id='+bubbleId+'></div>');
                }

            }
        }

    });

    //tool보이게(방장권한)
    function toolsVisible(){
        $("#colors li").css("display","inline-block");
        $("#colors li.selected").css("display","inline-block");
        $("#tools label").html("Brush Size:");
        $("#brush_size").css("display","inline-block");
        $("#btn-undo").css("display","inline-block");
        $("#btn-reset").css("display","inline-block");
    }

    //툴 안보이게(방장이 아닌 클라이언트)
    function toolsInvisible(){
        $("#colors li").css("display","none");
        $("#colors li.selected").css("display","none");
        $("#tools label").html("");
        $("#brush_size").css("display","none");
        $("#btn-undo").css("display","none");
        $("#btn-reset").css("display","none");
    }

    //시작버튼 보이게(방장권한)
    function startBtnVisible(){
        $("#btn-start").css("display","block");
    }

    //시작버튼 안보이게(방장이 아닌 클라이언트)
    function startBtnInvisible(len){
        $("#btn-start").css("display","none");
        if(len > 2){
            $("#btn-start").removeAttr('disabled');
        }
        else{
            $("#btn-start").attr('disabled', 'disabled');
        }
    }

    //캔버스 활성화(방장권한)
    function canvasActive(){
        $('#canvas').css('pointer-events','');
    }
    //캔버스 비활성화(방장이 아닌 클라이언트)
    function canvasInactive(){
        $('#canvas').css('pointer-events', 'none');
    }
    //정답표시(방장권한)
    function answerVisible(word){
        $('#word').css("display","block");
        $('#word').html(word);
    }
    //정답 안보이게(방장이 아닌 클라이언트)
    function answerInvisible(){
        $('#word').css("display","none");
        $('#word').html("");
    }

    //캔버스 초기화
    function canvasInit() {
        context = document.getElementById("canvas").getContext("2d");

        //선스타일 "둥글게''
        context.lineCap = "round";
        //위에 스타일 저장
        context.save();

        //캔버스초기화
        //캔버스 색(흰색으로 덮어버림)
        context.fillStyle = '#fff';
        //캔버스크기
        context.fillRect(0, 0, context.canvas.width, context.canvas.height);

        //선스타일 "둥글게" 다시 불러옴
        context.restore();
    }
</script>

</html>